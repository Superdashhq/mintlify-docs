{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI Voice API",
    "description": "A sample API that uses a voice API to demonstrate outbound call functionality",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://voiceapi.superdashhq.com/api/v1"
    }
  ],
  "paths": {
    "/place-outbound-call/{projectID}": {
      "post": {
        "description": "Use this API endpoint to immediately initiate a call to a specified number.",
        "parameters": [
          {
            "name": "projectID",
            "in": "path",
            "required": true,
            "description": "Your workspace ID or project ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Details required to initiate the call",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fromNumber": {
                    "type": "string",
                    "description": "The number from which the call will be placed"
                  },
                  "toNumber": {
                    "type": "string",
                    "description": "The number to which the call will be placed"
                  },
                  "attributes": {
                    "type": "object",
                    "description": "Additional attributes for the call",
                    "properties": {
                      "customField1": {
                        "type": "string",
                        "description": "Any value you want to dynamically access while placing the call, like first name, last name, company name, etc."
                      },
                      "customField2": {
                        "type": "string",
                        "description": "Any value you want to dynamically access while placing the call, like first name, last name, company name, etc."
                      },
                      "customField3": {
                        "type": "string",
                        "description": "Any value you want to dynamically access while placing the call, like first name, last name, company name, etc."
                      }
                    }
                  }
                },
                "required": ["fromNumber", "toNumber"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Call placed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "Confirmation message indicating the call was placed"
                    }
                  },
                  "example": {
                    "msg": "Call placed to {toNumber}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "HTTP status code for the error"
                    },
                    "code": {
                      "type": "integer",
                      "description": "Application-specific error code"
                    },
                    "moreInfo": {
                      "type": "string",
                      "description": "URL with more information about the error"
                    }
                  },
                  "example": {
                    "status": 400,
                    "code": "Error code",
                    "moreInfo": "Link to read about the error "
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "HTTP status code for the error"
                    }
                  },
                  "example": {
                    "status": 401,
                    "msg": "Api key is not valid"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "HTTP status code for the error"
                    }
                  },
                  "example": {
                    "status": 403,
                    "msg": "Api key is not valid"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "HTTP status code for the error"
                    }
                  },
                  "example": {
                    "status": 500,
                    "msg": "Server Error"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header"
      }
    }
  }
}
